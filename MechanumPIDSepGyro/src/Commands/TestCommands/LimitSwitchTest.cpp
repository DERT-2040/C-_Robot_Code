// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "LimitSwitchTest.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

LimitSwitchTest::LimitSwitchTest(): frc::Command() {
        // Use requires() here to declare subsystem dependencies
    // eg. requires(Robot::
}
void LimitSwitchTest::Initialize() {
}

// Called repeatedly when this Command is scheduled to run
void LimitSwitchTest::Execute() {
	SmartDashboard::PutString("DB/String 0", "TopGrabber: " + std::to_string(RobotMap::grabberswitchupper->Get()));
	SmartDashboard::PutString("DB/String 1", "BottomGrabber: "+ std::to_string(RobotMap::grabberswitchlower->Get()));
	SmartDashboard::PutString("DB/String 2", "TopGrabberLift: "+ std::to_string(RobotMap::grabberliftswitchupper->Get()));
	SmartDashboard::PutString("DB/String 3", "BottomGrabberLift: "+ std::to_string(RobotMap::grabberliftswitchlower->Get()));
	SmartDashboard::PutString("DB/String 4", "TopClimberLift: "+ std::to_string(RobotMap::climberliftswitchupper->Get()));
	SmartDashboard::PutString("DB/String 5", "BottomClimberLift: "+ std::to_string(RobotMap::climberliftswitchlower->Get()));
	SmartDashboard::PutString("DB/String 6", "CubeIntake: "+ std::to_string(RobotMap::cubechecker->Get()));
}

// Make this return true when this Command no longer needs to run execute()
bool LimitSwitchTest::IsFinished() {
	return false;

}

// Called once after isFinished returns true
void LimitSwitchTest::End() {
}

// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void LimitSwitchTest::Interrupted() {
}
