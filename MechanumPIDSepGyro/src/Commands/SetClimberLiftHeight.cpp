// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "SetClimberLiftHeight.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

SetClimberLiftHeight::SetClimberLiftHeight(): frc::Command() {
        // Use requires() here to declare subsystem dependencies
    // eg. requires(Robot::chassis.get());

	Requires(Robot::climberlift.get());
}
void SetClimberLiftHeight::Initialize() {
}

// Called repeatedly when this Command is scheduled to run
void SetClimberLiftHeight::Execute() {
	speed = Robot::oi->getGamepad()->GetRawAxis(1);
	if(Robot::climberlift->AtTopLimit() && speed < -0.05){
		Robot::climberlift->SetSpeed(speed);
	}
	else if (Robot::climberlift->AtBottomLimit() && speed > 0.05){
		Robot::climberlift->SetSpeed(speed);
	}
	else if (!(Robot::climberlift->AtBottomLimit()) && !(Robot::climberlift->AtTopLimit())){
		Robot::climberlift->SetSpeed(speed);
	}
	else{
		Robot::climberlift->SetSpeed(0);
	}
}

// Make this return true when this Command no longer needs to run execute()
bool SetClimberLiftHeight::IsFinished() {
	return speed<0.05 && speed > -0.05;

}

// Called once after isFinished returns true
void SetClimberLiftHeight::End() {
	Robot::climberlift->SetSpeed(0);
}

// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void SetClimberLiftHeight::Interrupted() {
}
