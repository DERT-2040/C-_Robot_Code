// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include "RobotMap.h"
#include "LiveWindow/LiveWindow.h"

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION
std::shared_ptr<frc::AnalogGyro> RobotMap::sensorsAnalogGyro1;
std::shared_ptr<frc::AnalogAccelerometer> RobotMap::sensorsAnalogAccelerometer1;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION

void RobotMap::init() {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    frc::LiveWindow *lw = frc::LiveWindow::GetInstance();

    sensorsAnalogGyro1.reset(new frc::AnalogGyro(0));
    lw->AddSensor("Sensors", "AnalogGyro 1", sensorsAnalogGyro1);
    sensorsAnalogGyro1->SetSensitivity(0.007);
    sensorsAnalogAccelerometer1.reset(new frc::AnalogAccelerometer(1));
    lw->AddSensor("Sensors", "AnalogAccelerometer 1", sensorsAnalogAccelerometer1);
    sensorsAnalogAccelerometer1->SetSensitivity(0.0);
        sensorsAnalogAccelerometer1->SetZero(2.5);


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
     //ADXL345_I2C accel = ADXL345_I2C(I2C::Port::kOnboard, Accelerometer::Range::kRange_4G, 0x3A);
     accel.reset(new frc::ADXL345_I2C(I2C::Port::kOnboard, Accelerometer::Range::kRange_4G));
}
