// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include "RobotMap.h"
#include "LiveWindow/LiveWindow.h"
#include "ctre/Phoenix.h"
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION
std::shared_ptr<WPI_TalonSRX> RobotMap::drivetrainRF;
std::shared_ptr<WPI_TalonSRX> RobotMap::drivetrainRB;
std::shared_ptr<WPI_TalonSRX> RobotMap::drivetrainLF;
std::shared_ptr<WPI_TalonSRX> RobotMap::drivetrainLB;
std::shared_ptr<WPI_TalonSRX> RobotMap::grabberlift;

std::shared_ptr<WPI_TalonSRX> RobotMap::grabberintakeL;
std::shared_ptr<WPI_TalonSRX> RobotMap::grabberintakeR;
std::shared_ptr<WPI_TalonSRX> RobotMap::grabberactuatorL;
std::shared_ptr<WPI_TalonSRX> RobotMap::grabberactuatorR;
std::shared_ptr<WPI_TalonSRX> RobotMap::climberlift;
std::shared_ptr<frc::Relay> RobotMap::climberratchet;
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION

std::shared_ptr<frc::AnalogGyro> RobotMap::sensorsAnalogGyro1;
std::shared_ptr<frc::ADXL345_I2C> RobotMap::accel;
std::shared_ptr<frc::AnalogInput> RobotMap::sensorsUltrasonic;
std::shared_ptr<frc::AnalogInput> RobotMap::sensorsInclinometerX;
std::shared_ptr<frc::AnalogInput> RobotMap::sensorsInclinometerY;

std::shared_ptr<frc::DigitalInput> RobotMap::climberliftswitchupper;
std::shared_ptr<frc::DigitalInput> RobotMap::climberliftswitchlower;
std::shared_ptr<frc::DigitalInput> RobotMap::grabberliftswitchupper;
std::shared_ptr<frc::DigitalInput> RobotMap::grabberliftswitchlower;
std::shared_ptr<frc::DigitalInput> RobotMap::grabberswitchupper;
std::shared_ptr<frc::DigitalInput> RobotMap::grabberswitchlower;
std::shared_ptr<frc::DigitalInput> RobotMap::cubechecker;

void RobotMap::init() {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    //frc::LiveWindow *lw = frc::LiveWindow::GetInstance();


	//Motor Initializing
    grabberactuatorR.reset(new WPI_TalonSRX(1));
    drivetrainRF.reset(new WPI_TalonSRX(3));
    drivetrainRB.reset(new WPI_TalonSRX(5));
    drivetrainLF.reset(new WPI_TalonSRX(2));
    drivetrainLB.reset(new WPI_TalonSRX(4));
    
    
    grabberlift.reset(new WPI_TalonSRX(6));
    climberlift.reset(new WPI_TalonSRX(7));
    grabberactuatorL.reset(new WPI_TalonSRX(8));
    grabberintakeL.reset(new WPI_TalonSRX(9));
    grabberintakeR.reset(new WPI_TalonSRX(11));
    climberratchet.reset(new Relay(0));
    
    

    frc::LiveWindow *lw = frc::LiveWindow::GetInstance();
    
    sensorsAnalogGyro1.reset(new frc::AnalogGyro(1));
    sensorsAnalogGyro1->SetSensitivity(0.007);
    accel.reset(new frc::ADXL345_I2C(I2C::Port::kOnboard, Accelerometer::Range::kRange_4G));
    sensorsUltrasonic.reset(new frc::AnalogInput(3));
    sensorsInclinometerX.reset(new frc::AnalogInput(2));
    lw->AddSensor("Sensors", "Ultrasonic", sensorsUltrasonic);
    lw->AddSensor("Sensors", "InclinometerX", sensorsInclinometerX);
   // sensorsInclinometerY.reset(new frc::AnalogInput(1));
    
    climberliftswitchupper.reset(new frc::DigitalInput(1));
    climberliftswitchlower.reset(new frc::DigitalInput(2));
    grabberliftswitchupper.reset(new frc::DigitalInput(4));
    grabberliftswitchlower.reset(new frc::DigitalInput(0));
    grabberswitchupper.reset(new frc::DigitalInput(3));
    grabberswitchlower.reset(new frc::DigitalInput(5));
    cubechecker.reset(new frc::DigitalInput(6));

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
}
