// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "JoystickDrivetrain.h"
#include <iostream>

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

JoystickDrivetrain::JoystickDrivetrain(): frc::Command() {
        // Use requires() here to declare subsystem dependencies
    // eg. requires(Robot::chassis.get());
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::drivetrain.get());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
}// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

// Called just before this Command runs the first time
void JoystickDrivetrain::Initialize() {
	//RobotMap::sensorsAnalogGyro1->InitGyro();
	//RobotMap::sensorsAnalogGyro1->Calibrate();

}

// Called repeatedly when this Command is scheduled to run
void JoystickDrivetrain::Execute() {
	double accelX = Robot::drivetrain -> getAccelX();
	double accelY = Robot::drivetrain -> getAccelY();
	double accelZ = Robot::drivetrain -> getAccelZ();
	double gyroAngle = Robot::gyroSubsystem -> gAngle();
	Robot::drivetrain->driving(Robot::oi->getJoystick1()->GetX(), Robot::oi->getJoystick1()->GetY(), Robot::oi->getJoystick2()->GetX(),0.75,0);
	/*SmartDashboard::PutString("DB/String 0",std::to_string(accelX));
	SmartDashboard::PutString("DB/String 1",std::to_string(accelY));
	SmartDashboard::PutString("DB/String 2",std::to_string(accelZ));
	SmartDashboard::PutString("DB/String 3",std::to_string(gyroAngle));*/

}

// Make this return true when this Command no longer needs to run execute()
bool JoystickDrivetrain::IsFinished() {
    return false;
}

// Called once after isFinished returns true
void JoystickDrivetrain::End() {

}

// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void JoystickDrivetrain::Interrupted() {

}
