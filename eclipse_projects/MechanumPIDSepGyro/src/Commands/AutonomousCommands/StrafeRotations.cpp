// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

#include "StrafeRotations.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

StrafeRotations::StrafeRotations(double rotations) :frc::Command() {
	// Use requires() here to declare subsystem dependencies
	// eg. requires(Robot::chassis.get());
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::drivetrain.get());
	rotationsToTurn = rotations;
	// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES

}    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

// Called just before this Command runs the first time
void StrafeRotations::Initialize() {
	SetTimeout(3*rotationsToTurn);
	Robot::gyroSubsystem->ResetGyro();
	//Robot::drivetrain->SetBrakeMode(true);
	Robot::drivetrain->Strafe(rotationsToTurn);
}

// Called repeatedly when this Command is scheduled to run
void StrafeRotations::Execute() {

}

// Make this return true when this Command no longer needs to run execute()
bool StrafeRotations::IsFinished() {
	return IsTimedOut() || Robot::drivetrain->AtSetpoint();
	//Robot::drivetrain->SetBrakeMode(false);

}

// Called once after isFinished returns true
void StrafeRotations::End() {
	Robot::drivetrain->Disable();
	Robot::gyroSubsystem->Disable();
}

// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void StrafeRotations::Interrupted() {
}
